
change_to_administrative_hereditary_effect = {
	scope:recipient = {
		save_scope_as = petition_vassal
		every_held_title = {
			limit = {
				tier = scope:petition_vassal.highest_held_title_tier
				is_landless_type_title = no
				is_noble_family_title = no
			}
			custom_tooltip = {
				text = petition_liege_house_governorship_rights_tt
				set_variable = {
					name = petition_house_rights
					value = scope:petition_vassal.house
					years = 100
				}
			}
		}
	}
}

change_to_administrative_effect = {
	save_scope_as = governor
	if = {
		limit = {
			NOT = { government_has_flag = government_is_administrative }
		}
		change_government = administrative_government
		save_scope_as = new_admin
	}
	if = {
		limit = {
			primary_title.tier >= tier_duchy
			liege = {
				is_independent_ruler = yes
				government_allows = administrative
			}
			house.house_head = {
				NOT = {
					any_held_title = { is_noble_family_title = yes }
				}
			}
		}
		create_noble_family_effect = yes
	}

	hidden_effect = {
		if = {
			limit = {
				is_governor = yes
				NOT = { has_trait = governor }
			}
			add_trait = governor
		}
	}
	if = {
		limit = { exists = scope:new_admin }
		domicile ?= {
			set_up_domicile_estate_effect = yes
		}
	}
}

change_to_administrative_interaction_effect = {
	scope:actor = {
		pay_short_term_gold = {
			target = scope:recipient
			gold = {
				value = 50
				scope:recipient = {
					if = {
						limit = { highest_held_title_tier >= tier_kingdom }
						multiply = 10
					}
					else_if = {
						limit = { highest_held_title_tier >= tier_duchy }
						multiply = 6
					}
					else_if = {
						limit = { highest_held_title_tier >= tier_county }
						multiply = 3
					}
				}
				if = {
					limit = { scope:gold ?= yes }
					add = scope:actor.medium_gold_value
				}
				if = {
					limit = {
						scope:actor = { has_realm_law_flag = admin_change_vassal_gov_cheaper }
					}
					multiply = 0.5
				}
			}
		}
	}
	scope:recipient = { change_to_administrative_effect = yes }
	if = {
		limit = {
			scope:hook = yes
			scope:actor = { has_usable_hook = scope:recipient }
		}
		scope:actor = { use_hook = scope:recipient }
	}
	if = {
		limit = { scope:hereditary = yes }
		scope:recipient = { save_scope_as = petition_vassal }
		change_to_administrative_hereditary_effect = yes
	}
	if = {
		limit = { scope:influence = yes }
		scope:actor = {
			change_influence = {
				value = massive_influence_loss
			}
		}
	}
}

set_up_domicile_estate_effect = {
	if = {
		limit = { is_domicile_type = estate }
		# Intentionally one level lower than what you can get
		if = {
			limit = {
				NOT = { has_domicile_building_or_higher = estate_main_02 }
				owner.culture ?= { has_innovation = innovation_city_planning }
			}
			add_domicile_building = estate_main_02
		}
		if = {
			limit = {
				has_domicile_building = estate_main_02
				NOT = { has_domicile_building_or_higher = estate_main_03 }
				owner.culture ?= { has_innovation = innovation_manorialism }
			}
			add_domicile_building = estate_main_03
		}
		switch = {
			trigger = has_domicile_building
			estate_main_03 = {
				while = {
					count = 2
					add_random_internal_estate_building = yes
				}
			}
			estate_main_02 = {
				add_random_internal_estate_building = yes
			}
		}
		fill_external_estate_building_effect = yes
	}
}

