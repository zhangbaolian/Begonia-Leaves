### Relacje postaci ###

# PL_nephew
# PL_niece

# ----- Dla RelationToMe -----

# MySheHe - moja, mój
# MySheHeGenitive - mojej, mojego
# MySheHeLocative - mojej, moim
# YourSheHe - twój, twoja w zależności od relacji
# RelationToMeAccusative - żonę, męża, siostrę
# RelationToMeVocative - żono, mężu, siostro
# RelationToMeLocative - żonie, mężu, siostrze
# RelationToMeDative - żonie, mężowi, znajomemu
# RelationToMeInstrumental - żoną, mężem, znajomym
# RelationToMePossessive - żony, męża, następcy (oryginalne)

# ----- Dla RelationToMeShort -----

# RelationToMeShortGenitive - żony, męża, siostry
# RelationToMeShortAccusative - żonę, męża, siostrę
# RelationToMeShortVocative - żono, mężu, siostro
# RelationToMeShortLocative - żonie, mężu, siostrze
# RelationToMeShortDative - żonie, mężowi, znajomemu
# RelationToMeShortInstrumental - żoną, mężem, znajomym

# ----- Dla RelationToMeAddress -----

# RelationToMeAddressVocative - moja miłości, mój przyjecielu

# ----- Dla CouncilPosition -----

# CouncilPositionGender - zarządca, zarządczyni
# CouncilPositionGenderPossessive - zarządcy, zarządczyni
# CouncilPositionGenderAccusative
# CouncilPositionGenderVocative
# CouncilPositionGenderLocative
# CouncilPositionGenderDative
# CouncilPositionGenderInstrumental

# ----- inne / nie do powszechnego użycia -----

# MyCharacterIntroductionNoComma_PL
# MySheHeGUI

# Nephew - siostrzeniec/bratanek
# Niece - siostrzenica/bratanica
PL_nephew = {
	type = character

	text = {
		localization_key = nephew_from_brother
		trigger = {
				root.father = {
					is_sibling_of = scope:second
			}

		}
	}

	text = {
		fallback = yes
		localization_key = nephew_from_sister
		trigger = {
				root.mother = {
					is_sibling_of = scope:second
				}
		}
	}
}

PL_nephew_possessive = {
	parent = PL_nephew
	suffix = "_possessive"
}

PL_nephew_accusative = {
	parent = PL_nephew
	suffix = "_accusative"
}

PL_nephew_vocative = {
	parent = PL_nephew
	suffix = "_vocative"
}

PL_nephew_locative = {
	parent = PL_nephew
	suffix = "_locative"
}

PL_nephew_dative = {
	parent = PL_nephew
	suffix = "_dative"
}

PL_nephew_instrumental = {
	parent = PL_nephew
	suffix = "_instrumental"
}

PL_niece = {
	type = character

	text = {
		localization_key = niece_from_brother
		trigger = {
				root.father = {
					is_sibling_of = scope:second
			}

		}
	}

	text = {
		fallback = yes
		localization_key = niece_from_sister
		trigger = {
				root.mother = {
					is_sibling_of = scope:second
				}
		}
	}
}

PL_niece_possessive = {
	parent = PL_niece
	suffix = "_possessive"
}

PL_niece_accusative = {
	parent = PL_niece
	suffix = "_accusative"
}

PL_niece_vocative = {
	parent = PL_niece
	suffix = "_vocative"
}

PL_niece_locative = {
	parent = PL_niece
	suffix = "_locative"
}

PL_niece_dative = {
	parent = PL_niece
	suffix = "_dative"
}

PL_niece_instrumental = {
	parent = PL_niece
	suffix = "_instrumental"
}


CouncilPositionPL = {
	log_loc_errors = no
	type = character

	text = {
		trigger = {
			has_council_position = councillor_chancellor
		}
		localization_key = councillor_chancellor
	}

	text = {
		trigger = {
			has_council_position = councillor_spouse
		}
		localization_key = councillor_spouse
	}

	text = {
		trigger = {
			has_council_position = councillor_marshal
		}
		localization_key = councillor_marshal
	}


	text = {
		trigger = {
			has_council_position = councillor_steward
		}
		localization_key = councillor_steward
	}


	text = {
		trigger = {
			has_council_position = councillor_spymaster
		}
		localization_key = councillor_spymaster
	}

	text = {
		trigger = {
			has_council_position = councillor_court_chaplain
		}
		localization_key = councillor_court_chaplain
	}

	text = {
		trigger = {
			has_council_position = councillor_vizier
		}
		localization_key = councillor_vizier
	}

	text = {
		fallback = yes
		localization_key = councillor_position_fallback
	}
}
